version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6
    container_name: spotify-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-spotify_clone}
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - spotify-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: spotify-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/spotify_clone?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
      CLIENT_URL: ${CLIENT_URL:-http://localhost}
    volumes:
      - ./backend/temp:/app/temp
    depends_on:
      - mongodb
    networks:
      - spotify-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: spotify-frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:5000}
      VITE_CLERK_PUBLISHABLE_KEY: ${VITE_CLERK_PUBLISHABLE_KEY}
    depends_on:
      - backend
    networks:
      - spotify-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: spotify-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      - spotify-network

# Networks
networks:
  spotify-network:
    driver: bridge

# Volumes
volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
